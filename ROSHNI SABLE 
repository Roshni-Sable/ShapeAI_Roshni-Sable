{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ROSHNI SABLE ","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOwmfQlDMEyn8ZMHIOqgtMj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"VY1ZxaHR2Q6j"},"source":["from keras.datasets import mnist \n","data = mnist.load data"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8SA351Dv2ioD"},"source":["((X_train,Y_train),(X_test, Y_test))=data"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kKhY_Zhf2wsc"},"source":["X_train =X_train.reshape((X_train.shape[0],28*28)).astype('float 32')\n","X_test = X_test.reshape((X_test.shape[0]28*28)).astype('float 32')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9STx9Ftu3eOM"},"source":["X_train =X_train/255\n","X_test = X_test/255"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8NQzF0883qM_"},"source":["from keras.utils import no.utils\n","print(Y_test.shape)\n"," \n","Y_train = np.utils.to_categorical(Y_train)\n","Y_test = np.utils.to_categorical(Y_test)\n"," \n","num_classes =Y_test.shape[1]\n","print(num_classes)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-4KlJIur4gFM"},"source":["from keras.models import Sequential \n","from keras.layers import Dense"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-rKFvQx14x2p"},"source":["model =Sequential ()\n","model.add(Dense(32,input_dim=28*28,activation ='relu'))\n","model.add(Dense(64,activation ='relu'))\n","model.add(Dense(10,activation ='softmax'))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kr6dEw8e5fAh"},"source":["model.compile(loss='categorical_crossentroy',optimizer ='adam',metrics = ['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ujsbyxQz5-7f"},"source":["model.summary()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UyMDVJBV6GFI"},"source":["model.fit(X_train, Y_train, epochs =10, batch _size=100)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RKSHSHqK6W-x"},"source":["scores =model.evaluate(X_test, Y_test)\n","print(scores)"],"execution_count":null,"outputs":[]}]}